name: 'tf deploy to azure'

on:
  push:
    branches: [ "master" ]
  pull_request:

permissions:
  contents: read

env:
  PAT_TOKEN: ${{secrets.PAT_TOKEN}}
  CLIENT_ID: ${{secrets.CLIENT_ID}}
  CLIENT_SECRETS: ${{secrets.CLIENT_SECRETS}}

jobs:
  terraform_plan:
    name: 'Terraform plan'
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup git global config
      run: git config --global url."https://oauth2:${{secrets.PAT_TOKEN}}@github.com".insteadOf https://github.com

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        PAT_TOKEN: ${{secrets.PAT_TOKEN}}

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init
   
    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan -input=false

  terraform_appy:
    name: 'Terraform apply'
    runs-on: ubuntu-latest
    needs: [terraform_plan]
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Setup git global config
      run: git config --global url."https://oauth2:${{secrets.PAT_TOKEN}}@github.com".insteadOf https://github.com


    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        PAT_TOKEN: ${{secrets.PAT_TOKEN}}

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init
   
    # Generates an execution plan for Terraform
    - name: Terraform apply
      run: terraform apply --auto-approve